name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version for the release'
        required: true
      description:
        description: 'Description for the release'
        required: true

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]

    steps:
    - uses: actions/checkout@v2

    - name: Cache Cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache target
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Build
      run: cargo build --release

    - name: Archive
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          mv target/release/tpm.exe target/release/tpm-${{ matrix.os }}.exe
          tar czvf tpm-${{ matrix.os }}.tar.gz -C target/release tpm-${{ matrix.os }}.exe
        else
          mv target/release/tpm target/release/tpm-${{ matrix.os }}
          tar czvf tpm-${{ matrix.os }}.tar.gz -C target/release tpm-${{ matrix.os }}
        fi


    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: tpm-${{ matrix.os }}
        path: tpm-${{ matrix.os }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: artifacts/

    - name: Create GitHub Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        name: Release ${{ github.event.inputs.version }}
        tag: ${{ github.event.inputs.version }}
        body: ${{ github.event.inputs.description }}
        draft: false
        prerelease: false
        artifacts: "artifacts/tpm-*"
